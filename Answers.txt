Вопрос №1
Читали ли вы чужой код? Если да, то что это был за код? Опишите свои впечатления от него.

Ответ.
Да, у меня есть опыт работы с чужим кодом, один из проектов даже довелось доработать.
Я работал с  телефонным справочником сотрудников компании. Проект хоть и не большой, но сначала казался полностью непонятным. Пришлось многое искать в интернете. Со временем я стал понимать логику взаимодействия некоторых процессов и даже добавил базовые функции для работы базой данных (на тот момент они не были реализованы в проекте).

Вопрос №2
Опишите известные вам языки программирования и их предназначение.

Ответ.
Все языки программирования были созданы в разное время для решения разных задач, и со временем они изменялись и улучшались. Есть множество языков со своими достоинствами и недостатками. Я описал те, с которым знаком лично.

Pascal - один из наиболее известных языков программирования для обучения программированию, является основой для ряда других языков.
С и С++ - компилируемые языки с сильной типизаций и прямым доступом к памяти.
используется для разработки чего угодно, хотя требуют заранее продумывать архитектуру проекта, управлять работой с памятью и тд. Язык С оказал значительное влияния при появлении других  Си-подобных языков, особенно это касается синтаксиса.
C# - язык, который используется для разработки программных продуктов и приложений на платформе .Net компании Microsoft. На этом языке осуществляется поддержка подавляющего большинства продуктов Microsoft, считается наиболее понятным и подходящим для новичков
Может применять для разработки чего угодно, особенно удобен для разработки игр и мобильных приложений с использованием Utiny 3D.
Java – во многом схожий с C# и один из самых популярных языков. Удобен для работы с данными огромных объемов (Big data). Java хорошо подходит для разработки программного обеспечения удаленной диагностики, мониторинга и управления.

JavaScript – лидер среди Web-разработки на данный момент. Слабо типизированный язык с автоматическим управлением памяти, но пониженным уровень безопасности.
SQL – язык структурированных запросов, для управления данными в системе реляционных баз данных. Предоставляет простой способ взаимодействия с информацией в базах данных.

 
Вопрос №3
Что такое "компилятор", зачем он нужен и почему некоторые языки обходятся без него?
Ответ
Компилятор - это программа или техническое средство, выполняющее перевод кода, написанный и понятный программисту, в язык, понятный компьютеру.
Интерпретируемые языки обходятся без компиляции. Вместо этого они транслируются при запуске, обычно с помощью отдельной программы (интерпретатора).

Вопрос №4
Что такое "фреймворк" и для чего он нужен? Приведите примеры известных вам фреймворков.
Ответ
Фреймворк - это программная оболочка, каркас, позволяющая упростить и ускорить решение типовых задач.  Фреймворк – как несущая конструкция, к которой добавляется необходимый функционал.
Известные мне фреймворки - . NET, ASP.NET Core,  ASP.NET MVC,  Entity Framework.


Вопрос №5
Что за приставка "http://" перед адресами сайтов и почему она всё чаще теперь становится "https://"?
Ответ
HTTP - Протокол передачи гипертекста. HTTP представляет собой набор правил, описывающих, как нужно передавать и интерпретировать web-страницы в интернете.
Это язык, на котором браузеры и серверы сети обмениваются данными.
HTTPS – это расширение HTTP, которое защищает передаваемые данные от перехвата злоумышленниками путем их шифрования.
Информация может принести доход или убыток, поэтому необходимость её безопасности с каждым годом увеличивается.

 
Вопрос №6
Самая популярная библиотека для разработки фронтенд-приложений, ReactJS, моделирует логику в виде компонентов. Если бы вам нужно было на ReactJS разработать страницу профиля ВКонтакте (например, https://vk.com/id1), на какие компоненты вы бы её разбили? Почему именно так?
Ответ

Class MainApp extends React.Component
{
<div>
	<Header_Panel>
    <Head_panel_info/>
    <Head_panel_User/>
	</Header_Panel>
<Main_Page>
  <Side_bar>
    <Home/>
    <News/
    <Messages/>
    <Friends/>
    <Groups/>
    <Home/>
    <Photo/>
    <Music/>
  </Side_bar>

  <Page_Body>
    <Page_Head/>
    <Page_Content/>
  </Page_Body>

  <Recommendations/>
    <Advertisement/>
  </Recommendations>
</Main_Page>
</div
}

Я прописал основные компоненты, немного углубившись в каждый из них.
Подобная архитектура интуитивно понятна и информативна, поэтому применяется практически в каждой социальной сети.

 
Вопрос №7
SqlServer, PostgreSQL, SQLLite, MySQL, Oracle, Microsoft Access - разные базы данных с разным функционалом, которые разрабатываются, в основном, разными компаниями с разным видением своего продукта.
Однако все эти базы используют один и тот же язык запросов - SQL, и не планируют от него отказываться. Как так получается? Что такого в SQL, что он подходит всем этим базам?
А если он такой чудесный, то почему многие другие базы данных, вроде MongoDB или Cassandra, его не используют?

Код на SQL читается легко, но при этом дает возможность администрировать базы данных и работать с ними.
Подходы NoSQL имеют сильные стороны: возможность хранения больших объемов неструктурированной информации, простая масштабируемость, базы данных не требуют большого объема подготовительных действий.
Но NoSQL имеет и слабые стороны: сильная привязка к конкретной базе данных и трудности перехода с одной базы данных на другую, более трудный поиск специалистов…
NoSQL выбирают за гибкость, масштабируемость и скорость.
SQL выбирают за совместимость, экономичность, простоту и надежность.
Что-то лучше пока не придумали.


Вопрос №9
В базе данных MS SQL Server есть продукты и категории. Одному продукту может соответствовать много категорий, в одной категории может быть много продуктов.
Напишите SQL запрос для выбора всех пар «Имя продукта – Имя категории». Если у продукта нет категорий, то его имя все равно должно выводиться.
Ответ

SELECT Products.Name as Product, Categories.Name as Category
FROM Products
LEFT JOIN Categories ON Products.Category = Categories.Name
ORDER BY Product


Задание:
Напишите библиотеку для поставки внешним клиентам, которая умеет вычислять площадь круга по радиусу и треугольника по трем сторонам. Дополнительно к работоспособности оценим:
•	Юнит-тесты
•	Легкость добавления других фигур
•	Вычисление площади фигуры без знания типа фигуры
•	Проверку на то, является ли треугольник прямоугольным

https://github.com/Narestel/Work.git
